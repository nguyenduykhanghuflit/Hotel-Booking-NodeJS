<link
  rel="stylesheet"
  href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css"
/>
<style>
  @import url('https://fonts.googleapis.com/css2?family=Poppins:wght@200&display=swap');

  .container {
    min-height: 100vh;
    /* display: flex;
    justify-content: center;
    align-items: center; */
  }
  .card {
    height: auto;
    width: 100%;
    border-radius: 10px;
    background-color: #fff;
    padding: 0 20px;
    box-sizing: border-box;
  }
  .payment-details {
    margin-top: 20px;
  }
  .payment-details p {
    font-size: 12px;
    font-weight: 700;
    color: #89898e;
  }
  .input-text {
    position: relative;
    margin-top: 30px;
  }
  input[type='text'] {
    height: 40px;
    width: 100%;
    border-radius: 5px;
    border: none;
    outline: 0;
    border: 1px solid #f6f6f7;
    padding: 0 10px;
    box-sizing: border-box;
    font-size: 13px;
    color: #333;
    font-weight: bolder;
  }
  .input-text span {
    position: absolute;
    top: -16px;
    left: 10px;
    font-size: 14px;
    font-weight: bolder;
  }
  .input-text-cvv {
    position: relative;
  }
  .input-text-cvv input[type='text'] {
    height: 40px;
    width: 70px;
    border: none;

    border-bottom: 1px solid #f6f6f7;
    border-top: 1px solid #f6f6f7;
    position: absolute;
    top: -40px;
    right: 60px;
  }
  .cvv input[type='text'] {
    position: absolute;
    right: 0;
    border-right: 1px solid #f6f6f7;
  }
  .billing {
    margin-top: 30px;
    position: relative;
  }
  .billing span {
    font-size: 12px;
    font-weight: 700;
    position: absolute;
    top: -16px;
    left: 10px;
  }
  .billing select {
    height: 35px;
    width: 100%;
    font-size: 12px;
    outline: 0;
    padding-left: 5px;
    border: 1px solid #f6f6f7;
    cursor: pointer;
  }
  .billing select option:nth-child(1) {
    display: none;
  }
  .zip-state {
    display: flex;
    width: 100%;
  }
  .zip {
    width: 50%;
  }
  .zip input[type='text'] {
    height: 35px;
  }
  .state {
    width: 50%;
  }
  .summary {
    margin-top: 20px;
    display: flex;
    justify-content: space-between;
  }
  .text-data p {
    margin-top: 3px;
    font-size: 14px;
    font-weight: bolder;
  }
  .numerical-data p {
    margin-top: 3px;
    font-size: 12px;
    font-weight: 600;
  }
  .pay {
    display: flex;
    justify-content: center;
    align-items: center;
    margin-top: 20px;
  }
  .pay .btn-primary {
    width: 100%;

    border: none;
    outline: 0;
    border-radius: 5px;
    color: #fff;
    font-size: 16px;
    font-weight: bolder;
    cursor: pointer;
    transition: all 0.5s;
  }

  .secure {
    margin-top: 20px;
    display: flex;
    justify-content: center;
    align-items: center;
    /*text-align:center;*/
    color: #aeaebc;
  }
  .secure p {
    font-size: 12px;
    font-weight: 600;
    color: #aeaebc;
    margin-left: 5px;
  }
  .last {
    margin-top: 40px;
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: 12px;
    font-weight: 700;
  }
  .last p {
    margin-right: 5px;
  }
  .last a {
    color: blue;
    text-decoration: none;
    margin-left: 5px;
    cursor: pointer;
  }
</style>
<h4>Thanh toán phòng</h4>
<div class="row">
  <div class="container">
    <div class="card">
      <div class="payment-details">
        <h3>Hóa đơn thanh toán</h3>
        <p>Mời quý khách kiểm tra lại hóa đơn</p>
        <p>Mã hóa đơn: <%= data.bookingID %></p>
      </div>
      <div style="display: none" class="input-text">
        <input
          id="bookingID"
          type="text"
          readonly="readonly"
          value=" <%= data.bookingID %>"
        />
        <span>Mã hóa đơn</span>
      </div>
      <div class="input-text">
        <input
          type="text"
          readonly="readonly"
          value=" <%= data.userData.info.fullName %>"
        />
        <span>Họ tên</span>
      </div>
      <div class="input-text">
        <input
          type="text"
          readonly="readonly"
          value=" <%= data.userData.info.phone %>"
        />
        <span>Số điện thoại</span>
      </div>
      <div class="input-text">
        <input
          type="text"
          readonly="readonly"
          value=" <%= data.bookingData.roomData.nameType %> "
        />
        <span>Loại phòng</span>
      </div>
      <div class="input-text">
        <input type="text" readonly="readonly" value=" <%= data.checkin %>" />
        <span>Ngày nhận phòng</span>
      </div>
      <div class="input-text">
        <input type="text" readonly="readonly" value=" <%= data.checkout %>" />
        <span>Ngày nhận trả phòng</span>
      </div>
      <div class="summary">
        <div class="text-data">
          <p>Tạm tính</p>
          <p>Khuyến mãi</p>
          <h5>Tổng tiền</h5>
        </div>
        <div class="numerical-data">
          <p><%= data.bookingData.roomData.price %>.000VND</p>
          <p>11%</p>
          <p><%= data.total %></p>
        </div>
      </div>
      <div class="pay">
        <!-- <a
          role="button"
          class="btn btn-primary"
          href="/admin/booking-list/payment/<%= data.bookingID %>"
          >Thanh toán</a
        > -->
        <button id="btnPayment" class="btn btn-primary">Thanh toán</button>
      </div>
      <div class="secure"></div>
      <div class="last"></div>
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    for (const el of document.querySelectorAll('[placeholder][data-slots]')) {
      const pattern = el.getAttribute('placeholder'),
        slots = new Set(el.dataset.slots || '_'),
        prev = ((j) =>
          Array.from(pattern, (c, i) => (slots.has(c) ? (j = i + 1) : j)))(0),
        first = [...pattern].findIndex((c) => slots.has(c)),
        accept = new RegExp(el.dataset.accept || '\\d', 'g'),
        clean = (input) => {
          input = input.match(accept) || [];
          return Array.from(pattern, (c) =>
            input[0] === c || slots.has(c) ? input.shift() || c : c
          );
        },
        format = () => {
          const [i, j] = [el.selectionStart, el.selectionEnd].map((i) => {
            i = clean(el.value.slice(0, i)).findIndex((c) => slots.has(c));
            return i < 0
              ? prev[prev.length - 1]
              : back
              ? prev[i - 1] || first
              : i;
          });
          el.value = clean(el.value).join``;
          el.setSelectionRange(i, j);
          back = false;
        };
      let back = false;
      el.addEventListener('keydown', (e) => (back = e.key === 'Backspace'));
      el.addEventListener('input', format);
      el.addEventListener('focus', format);
      el.addEventListener(
        'blur',
        () => el.value === pattern && (el.value = '')
      );
    }
  });
</script>
<script>
  let btnPayment = document.querySelector('#btnPayment');
  btnPayment.addEventListener('click', (e) => {
    let bookingID = document.querySelector('#bookingID').value;
    axios
      .post('/admin/booking-list/payment', { data: { bookingID } })
      .then((response) => {
        let message = response.data.message;
        if (message == 'success') {
          alert('Thanh toán thành công');
        } else {
          alert('Thanh toán thất bại');
        }
      })
      .catch((err) => {
        console.log(err);
      });
  });

  let listText = document.querySelectorAll(
    '.navbar-vertical .navbar-nav>.nav-item .nav-link'
  );
  listText.forEach((item) => {
    if (
      item.classList.contains('active') &&
      item.classList.contains('bg-gradient-primary')
    )
      item.classList.remove('active');
    item.classList.remove('bg-gradient-primary');
  });
  document.querySelector('.booking-list').classList.add('active');
  document.querySelector('.booking-list').classList.add('bg-gradient-primary');

  document.querySelector(
    '.breadcrumb-item.text-sm.text-dark.active'
  ).textContent = 'Thanh toán';
  document.querySelector('.breadcrumb-item a').textContent = 'Phiếu đặt phòng';
  document
    .querySelector('.breadcrumb-item a')
    .setAttribute('href', '/admin/booking-list');
</script>
